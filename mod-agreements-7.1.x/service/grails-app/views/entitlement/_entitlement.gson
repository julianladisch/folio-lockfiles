import groovy.transform.*
import groovyx.net.http.HttpException
import java.util.concurrent.ExecutionException
import java.util.concurrent.Future
import org.olf.erm.Entitlement

@Field Entitlement entitlement

def should_render_default_coverage = false

if (entitlement.type == 'external') {
  json tmpl."externalEntitlement"(entitlement)
} else {
  final def should_expand = ['poLines', 'resource', 'tags', 'docs' ]
  
  // Anything handled specifically below should always be excluded from the the general render
  final def should_exclude = [
    'coverage',
    'customCoverage',
    'explanation',
    'startDate',
    'endDate',
    'activeFrom',
    'activeTo',
    'contentUpdated',
    'haveAccess'
  ]
  
  if ( controllerName != 'subscriptionAgreement' ) {
    should_expand << 'owner'
    should_render_default_coverage = true
  }
  
  json g.render(entitlement, [expand: should_expand, excludes: should_exclude]) {
    
    if (entitlement.coverage) {
    
      'coverage' g.render (entitlement.coverage)
      'customCoverage' true
      
    } else if (entitlement?.resource?.coverage && should_render_default_coverage) {
      'coverage' g.render (entitlement?.resource?.coverage)
      'customCoverage' false
      
    } else {
      'coverage' []
      'customCoverage' false
    }
    
    'explanation' entitlement.getExplanation()
    'startDate' entitlement.activeFrom
    'endDate' entitlement.activeTo
    'activeFrom' entitlement.activeFrom
    'activeTo' entitlement.activeTo
    'contentUpdated' entitlement.getContentUpdated()
    'haveAccess' entitlement.getHaveAccess()
  }
}
